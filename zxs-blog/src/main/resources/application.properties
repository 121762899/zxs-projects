server.port=8082
debug=true

# THYMELEAF 
spring.thymeleaf.encoding=UTF-8
# 热部署静态文件
spring.thymeleaf.cache=false
# 使用HTML5标准
spring.thymeleaf.mode=HTML5

# DataSource 
spring.datasource.url=jdbc:mysql://localhost/blog?characterEncoding=utf-8&useSSL=false&serverTimezone=UTC 
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


#spring.main.allow-bean-definition-overriding=true


# 内嵌 Elasticsearch 实例。默认存储位置是工作目录的 elastic 目录 (测试用)
#spring.data.elasticsearch.properties.path.home=target/elastic
# 远程服务
#spring.elasticsearch.rest.uris=localhost:9300
#spring.elasticsearch.rest.connection-timeout=120s

# 远程服务
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

# 设置连接超时时间
spring.data.elasticsearch.properties.transport.tcp.connect_timeout=120s


# JPA
#create:
#每次应用启动的时候会重新根据实体建立表，之前的表和数据都会被删除。
#create-drop:
#和上面的功能一样，但是多了一样，就是在应用关闭的时候，也就是sessionFactory一关闭，会把表删除。
#update:
#最常用的，第一次启动根据实体建立表结构，之后启动会根据实体的改变更新表结构，之前的数据都在。
#validate:
#会验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值，运行程序会校验实体字段与数据库已有的表的字段类型是否相同，不同会报错
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update